#lang eopl



;; Ejercicios - IL 1.1.1

;Punto 1
( define invert
   (lambda (l)
     (if (null? l)
         '()
     (cons (cons (cadar l) (cons (caar l) empty)) (invert (cdr l)) ))
   )
 )

;Punto 2
(define down (lambda(l)
        (if (eqv? l empty ) empty
        (cons (cons(car l) empty) (down (cdr l))))
        ))

;punto 6

(define swapper
  (lambda (e1 e2 l)

      (if (eqv? l empty) '()
          (if(eqv? (car l) e1)
             (cons e2 (swapper e1 e2 (cdr l)))
             (if (eqv? (car l) e2)
                 (cons e1 (swapper e1 e2 (cdr l)))
                 (cons (car l) (swapper e1 e2 (cdr l)))
                 )
             )
          )
      
    )
  )


;Punto 7

(define cartesian-product
  (letrec
  ) 


;Punto 12


;Punto 17



;Punto 22 
